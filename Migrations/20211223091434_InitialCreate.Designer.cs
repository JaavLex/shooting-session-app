// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ssa_backend.Models;

namespace ssa_backend.Migrations
{
    [DbContext(typeof(SSAContext))]
    [Migration("20211223091434_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.13");

            modelBuilder.Entity("ssa_backend.Models.Ammunition", b =>
                {
                    b.Property<int>("AmmunitionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AmmoPicture")
                        .HasColumnType("TEXT");

                    b.Property<string>("Caliber")
                        .HasColumnType("TEXT");

                    b.Property<int>("PricePerPacks")
                        .HasColumnType("INTEGER");

                    b.HasKey("AmmunitionId");

                    b.ToTable("Ammunition");
                });

            modelBuilder.Entity("ssa_backend.Models.Person", b =>
                {
                    b.Property<int>("PersonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Age")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("PersonId");

                    b.ToTable("Persons");
                });

            modelBuilder.Entity("ssa_backend.Models.SessionParticipant", b =>
                {
                    b.Property<int>("SessionParticipantId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("PersonId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SessionId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ShootingSessionId")
                        .HasColumnType("INTEGER");

                    b.HasKey("SessionParticipantId");

                    b.HasIndex("PersonId");

                    b.HasIndex("ShootingSessionId");

                    b.ToTable("SessionParticipants");
                });

            modelBuilder.Entity("ssa_backend.Models.ShootingRange", b =>
                {
                    b.Property<int>("ShootingRangeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .HasColumnType("TEXT");

                    b.Property<int>("PricePerStall")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ShootingRangeId1")
                        .HasColumnType("INTEGER");

                    b.HasKey("ShootingRangeId");

                    b.HasIndex("ShootingRangeId1");

                    b.ToTable("ShootingRanges");
                });

            modelBuilder.Entity("ssa_backend.Models.ShootingSession", b =>
                {
                    b.Property<int>("ShootingSessionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("SessionDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("ShootingRangeId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("StallCount")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TotalPrice")
                        .HasColumnType("INTEGER");

                    b.HasKey("ShootingSessionId");

                    b.HasIndex("ShootingRangeId");

                    b.ToTable("ShootingSessions");
                });

            modelBuilder.Entity("ssa_backend.Models.UsedAmmunition", b =>
                {
                    b.Property<int>("UsedAmmunitionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AmmoId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AmmunitionId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CountUsed")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SessionId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ShootingSessionId")
                        .HasColumnType("INTEGER");

                    b.HasKey("UsedAmmunitionId");

                    b.HasIndex("AmmunitionId");

                    b.HasIndex("ShootingSessionId");

                    b.ToTable("UsedAmmunitions");
                });

            modelBuilder.Entity("ssa_backend.Models.UsedWeapon", b =>
                {
                    b.Property<int>("UsedWeaponId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("SessionId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ShootingSessionId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("WeaponId")
                        .HasColumnType("INTEGER");

                    b.HasKey("UsedWeaponId");

                    b.HasIndex("ShootingSessionId");

                    b.HasIndex("WeaponId");

                    b.ToTable("UsedWeapons");
                });

            modelBuilder.Entity("ssa_backend.Models.Weapon", b =>
                {
                    b.Property<int>("WeaponId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AmmoId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AmmunitionId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("WeaponName")
                        .HasColumnType("TEXT");

                    b.Property<string>("WeaponPicture")
                        .HasColumnType("TEXT");

                    b.HasKey("WeaponId");

                    b.HasIndex("AmmunitionId");

                    b.ToTable("Weapons");
                });

            modelBuilder.Entity("ssa_backend.Models.SessionParticipant", b =>
                {
                    b.HasOne("ssa_backend.Models.Person", "Person")
                        .WithMany("SessionParticipants")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ssa_backend.Models.ShootingSession", "ShootingSession")
                        .WithMany("SessionParticipants")
                        .HasForeignKey("ShootingSessionId");

                    b.Navigation("Person");

                    b.Navigation("ShootingSession");
                });

            modelBuilder.Entity("ssa_backend.Models.ShootingRange", b =>
                {
                    b.HasOne("ssa_backend.Models.ShootingRange", null)
                        .WithMany("ShootingRanges")
                        .HasForeignKey("ShootingRangeId1");
                });

            modelBuilder.Entity("ssa_backend.Models.ShootingSession", b =>
                {
                    b.HasOne("ssa_backend.Models.ShootingRange", "ShootingRange")
                        .WithMany()
                        .HasForeignKey("ShootingRangeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ShootingRange");
                });

            modelBuilder.Entity("ssa_backend.Models.UsedAmmunition", b =>
                {
                    b.HasOne("ssa_backend.Models.Ammunition", "Ammunition")
                        .WithMany("UsedAmmunitions")
                        .HasForeignKey("AmmunitionId");

                    b.HasOne("ssa_backend.Models.ShootingSession", "ShootingSession")
                        .WithMany("UsedAmmunitions")
                        .HasForeignKey("ShootingSessionId");

                    b.Navigation("Ammunition");

                    b.Navigation("ShootingSession");
                });

            modelBuilder.Entity("ssa_backend.Models.UsedWeapon", b =>
                {
                    b.HasOne("ssa_backend.Models.ShootingSession", "ShootingSession")
                        .WithMany("UsedWeapons")
                        .HasForeignKey("ShootingSessionId");

                    b.HasOne("ssa_backend.Models.Weapon", "Weapon")
                        .WithMany("UsedWeapons")
                        .HasForeignKey("WeaponId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ShootingSession");

                    b.Navigation("Weapon");
                });

            modelBuilder.Entity("ssa_backend.Models.Weapon", b =>
                {
                    b.HasOne("ssa_backend.Models.Ammunition", "Ammunition")
                        .WithMany("Weapons")
                        .HasForeignKey("AmmunitionId");

                    b.Navigation("Ammunition");
                });

            modelBuilder.Entity("ssa_backend.Models.Ammunition", b =>
                {
                    b.Navigation("UsedAmmunitions");

                    b.Navigation("Weapons");
                });

            modelBuilder.Entity("ssa_backend.Models.Person", b =>
                {
                    b.Navigation("SessionParticipants");
                });

            modelBuilder.Entity("ssa_backend.Models.ShootingRange", b =>
                {
                    b.Navigation("ShootingRanges");
                });

            modelBuilder.Entity("ssa_backend.Models.ShootingSession", b =>
                {
                    b.Navigation("SessionParticipants");

                    b.Navigation("UsedAmmunitions");

                    b.Navigation("UsedWeapons");
                });

            modelBuilder.Entity("ssa_backend.Models.Weapon", b =>
                {
                    b.Navigation("UsedWeapons");
                });
#pragma warning restore 612, 618
        }
    }
}
